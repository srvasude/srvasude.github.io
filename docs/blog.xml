<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Shores of Infinity</title>
<link>https://www.shoresofinfinity.net/blog.html</link>
<atom:link href="https://www.shoresofinfinity.net/blog.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.8.24</generator>
<lastBuildDate>Fri, 19 Sep 2025 07:00:00 GMT</lastBuildDate>
<item>
  <title>Trapezoid Rule Monte Carlo</title>
  <dc:creator>Srinivas Vasudevan</dc:creator>
  <link>https://www.shoresofinfinity.net/posts/quad_mc.html</link>
  <description><![CDATA[ 




<p>I recently encountered a Monte Carlo estimator <span class="citation" data-cites="masry1990">(Masry and Cambanis 1990)</span> that uses the trapezoid rule and wanted to write out / generalize it.</p>
<div class="no-row-height column-margin column-container"><div id="ref-masry1990" class="csl-entry">
Masry, Elias, and Stamatis Cambanis. 1990. <span>“Trapezoidal Monte Carlo Integration.”</span> <em>SIAM Journal on Numerical Analysis</em> 27 (2): 225–46. <a href="https://apps.dtic.mil/sti/tr/pdf/ADA222380.pdf">https://apps.dtic.mil/sti/tr/pdf/ADA222380.pdf</a>.
</div><div id="fn1"><p><sup>1</sup>&nbsp;Methods such as Clenshaw-Curtis or Gaussian Quadrature can do very well on smooth integrands with errors of <img src="https://latex.codecogs.com/png.latex?%7B%5Cdisplaystyle%20O(%5B2N%5D%5E%7B-k%7D/k)%7D">, where <img src="https://latex.codecogs.com/png.latex?N"> is the number of quadrature points, and <img src="https://latex.codecogs.com/png.latex?k"> is the number of derivatives <img src="https://latex.codecogs.com/png.latex?f"> has.</p></div></div><p>Given a function <img src="https://latex.codecogs.com/png.latex?f"> (we’ll assume <img src="https://latex.codecogs.com/png.latex?f"> is <img src="https://latex.codecogs.com/png.latex?C%5E%5Cinfty"> for simplicity, but some of these arguments can be changed depending on the smoothness) defined on the unit interval <img src="https://latex.codecogs.com/png.latex?%5B0,%201%5D">, we would like to compute the integral <img src="https://latex.codecogs.com/png.latex?I%20=%20%5Cint_0%5E1%20f(x)%20dx">. Quadrature methods can easily deal with estimating these integrals <sup>1</sup></p>
<p>Our plan will be to come up with a lower variance (but biased) estimator, and then generalize to computing integrals of the form <img src="https://latex.codecogs.com/png.latex?%5Cint_A%20f(x)%20p(x)%20dx">, where <img src="https://latex.codecogs.com/png.latex?p(x)"> is a probability density on some subset of <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BR%7D">. Finally, we’ll be able to get an estimator even if we only have access to a sampler and the unnormalized log density (e.g.&nbsp;in the case of MCMC).</p>
<p>The typical Monte-Carlo estimator for this type of integral is <img src="https://latex.codecogs.com/png.latex?S_n%20=%20%5Cfrac%7B1%7D%7Bn%7D%5Csum_%7Bi=1%7D%5En%20f(u_i)">, where <img src="https://latex.codecogs.com/png.latex?u_i%20%5Csim%20U(0,%201)"> are IID uniform samples. This is an unbiased estimator for <img src="https://latex.codecogs.com/png.latex?I"> and has variance <img src="https://latex.codecogs.com/png.latex?var(S_n)%20=%20%5Cfrac%7Bvar(f)%7D%7Bn%7D">, where <img src="https://latex.codecogs.com/png.latex?var(f)"> is the variance of the random variable <img src="https://latex.codecogs.com/png.latex?f(U),%20U%20%5Csim%20U(0,%201)">. In particular the variance is inversely proportional to <img src="https://latex.codecogs.com/png.latex?n">.</p>
<section id="trapezoid-rule-estimator" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="trapezoid-rule-estimator">Trapezoid Rule Estimator</h2>
<p>If we look at error estimates of various quadrature rules, we see that the errors get better dependency than <img src="https://latex.codecogs.com/png.latex?O(%5Cfrac%7B1%7D%7B%5Csqrt%20n%7D)"> for estimating <img src="https://latex.codecogs.com/png.latex?I">.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>We can see from the table that we can get errors <img src="https://latex.codecogs.com/png.latex?S_n%20-%20I"> that are at least <img src="https://latex.codecogs.com/png.latex?O(%5Cfrac%7B1%7D%7Bn%5E2%7D)"> for various Newton-Cotes formula. From <a href="https://en.wikipedia.org/wiki/Newton%E2%80%93Cotes_formulas">wikipedia</a>.</p>
<table class="caption-top table">
<colgroup>
<col style="width: 55%">
<col style="width: 44%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: right;">Name</th>
<th style="text-align: center;">Error Bound</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">Trapezoid Rule</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?-%5Cfrac%7B1%7D%7B12n%5E2%7Df''(%5Cxi)"></td>
</tr>
<tr class="even">
<td style="text-align: right;">Simpson’s <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B3%7D"> rule Rule</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?-%5Cfrac%7B1%7D%7B90n%5E4%7Df%5E%7B(4)%7D(%5Cxi)"></td>
</tr>
<tr class="odd">
<td style="text-align: right;">Boole’s Rule</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?-%5Cfrac%7B8%7D%7B945n%5E6%7Df%5E%7B(6)%7D(%5Cxi)"></td>
</tr>
</tbody>
</table>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Cxi"> lies in the interval of integration <img src="https://latex.codecogs.com/png.latex?%5Ba,%20b%5D">.</p>
</div></div><p>The main idea is we can exploit the structure of the trapezoid rule (and in general Newton-Cotes rules) to get better scaling of the variance with respect to the number of samples <img src="https://latex.codecogs.com/png.latex?n">.</p>
<p>Given <img src="https://latex.codecogs.com/png.latex?n"> samples <img src="https://latex.codecogs.com/png.latex?u_i%20%5Csim%20U(0,%201)">, we can sort the samples to form the order statistics <img src="https://latex.codecogs.com/png.latex?v_i">. We’ll also add the points <img src="https://latex.codecogs.com/png.latex?0"> and <img src="https://latex.codecogs.com/png.latex?1"> to get <img src="https://latex.codecogs.com/png.latex?n%20+%201"> points (let <img src="https://latex.codecogs.com/png.latex?v_0%20=%200"> and <img src="https://latex.codecogs.com/png.latex?v_%7Bn%20+%201%7D%20=%201">).</p>
<p>We can then consider the trapezoid rule estimator: <img src="https://latex.codecogs.com/png.latex?S'_n%20=%20%5Csum_%7Bi=0%7D%5E%7Bn%7D%20%5Cfrac%7B1%7D%7B2%7D%20(v_%7Bi+1%7D%20-%20v_i)(f(v_%7Bi+1%7D)%20+%20f(v_i))"></p>
<div id="cell-fig-trap-margin" class="cell page-columns page-full" data-fig-height="1" data-fig-width="1" data-message="false" data-execution_count="1">

<div class="no-row-height column-margin column-container"><div class="cell-output cell-output-display">
<div id="fig-trap-margin" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-trap-margin-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<a href="quad_mc_files/figure-html/fig-trap-margin-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="Figure&nbsp;1: Randomized Trapezoid Rule for \sin(\frac{\pi}{2} x)"><img src="https://www.shoresofinfinity.net/posts/quad_mc_files/figure-html/fig-trap-margin-output-1.png" width="299" height="299" class="figure-img"></a>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-trap-margin-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Randomized Trapezoid Rule for <img src="https://latex.codecogs.com/png.latex?%5Csin(%5Cfrac%7B%5Cpi%7D%7B2%7D%20x)">
</figcaption>
</figure>
</div>
</div></div></div>
<p>The intuition is that for sufficiently smooth <img src="https://latex.codecogs.com/png.latex?f">, <img src="https://latex.codecogs.com/png.latex?S'_n"> should be a good estimator of the integral <img src="https://latex.codecogs.com/png.latex?I"> due to the use of the trapezoid rule. Note that <img src="https://latex.codecogs.com/png.latex?S'_n"> may be biased, and indeed Figure&nbsp;1 shows an example of this, where the trapezoid rule approximates the integral well, but will always be an underestimate due to the concavity of the integrand. The hope is that we may trade off some bias for a reduction in variance.</p>
<p>As mentioned above, we can note the following deficiencies of this method, compared to quadrature rules and monte carlo rules.</p>
<ul>
<li>This can be a biased estimator.</li>
<li>This is for <img src="https://latex.codecogs.com/png.latex?U(0,%201)"> random variables and in one dimension, for which there are better methods.</li>
<li>In the current formulation, you have to evaluate the endpoints <img src="https://latex.codecogs.com/png.latex?0"> and <img src="https://latex.codecogs.com/png.latex?1">. This can be problematic for integrands (such as certain <img src="https://latex.codecogs.com/png.latex?Beta(%5Calpha,%20%5Cbeta)"> densities which go off to <img src="https://latex.codecogs.com/png.latex?%5Cinfty"> in the tails). We can actually get away with <img src="https://latex.codecogs.com/png.latex?n"> points without evaluating the <img src="https://latex.codecogs.com/png.latex?0"> and <img src="https://latex.codecogs.com/png.latex?1"> points. Adding the points just simplifies the analysis and reduces the error by a constant.</li>
</ul>
</section>
<section id="error-bound-on-s_n" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="error-bound-on-s_n">Error bound on <img src="https://latex.codecogs.com/png.latex?S'_n"></h2>
<p>Let’s take a look at the error <img src="https://latex.codecogs.com/png.latex?S'_n%20-%20I">.</p>
<p>For simplicity we’ll reuse a form of the Trapezoid Rule Error <sup>2</sup>.</p>
<div class="no-row-height column-margin column-container"><div id="fn2"><p><sup>2</sup>&nbsp;See <a href="https://mathweb.ucsd.edu/~ebender/20B/77_Trap.pdf">here</a></p></div></div><p>If we are estimating <img src="https://latex.codecogs.com/png.latex?%5Cint_%7Bv_i%7D%5E%7Bv_%7Bi+1%7D%7D%20f(x)%20dx">, then the error of using <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B2%7D(f(v_%7Bi+1%7D)%20+%20f(v_%7Bi%7D))(v_%7Bi+1%7D%20-%20v_i)"> is bounded by <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7BK_i(v_%7Bi+1%7D%20-%20v_i)%5E3%7D%7B12%7D">, where <img src="https://latex.codecogs.com/png.latex?K_i%20=%20%5Csup_%7B%5Bv_i,%20v_%7Bi+1%7D%5D%7D%20%7Cf''(x)%7C"> (this can be derived through repeated applications of the Mean Value Theorem).</p>
<p><img src="https://latex.codecogs.com/png.latex?%7CS'_n%20-%20I%7C%20=%20%7C-%5Cint_0%5E1%20f(x)%20dx%20+%20%5Csum_%7Bi=0%7D%5E%7Bn%7D%5Cfrac%7B1%7D%7B2%7D(v_%7Bi+1%7D%20-%20v_i)%20(f(v_%7Bi+1%7D)%20-%20f(v_i))%7C"></p>
<p><img src="https://latex.codecogs.com/png.latex?=%7C%5Csum_%7Bi=0%7D%5E%7Bn%7D%5Cfrac%7B1%7D%7B2%7D(v_%7Bi+1%7D%20-%20v_i)%20(f(v_%7Bi+1%7D)%20+%20f(v_i))%20-%20%5Cint_%7Bv_i%7D%5E%7Bv_%7Bi+1%7D%7D%20f(x)%20dx%7C"></p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cle%5Csum_%7Bi=0%7D%5E%7Bn%7D%7C%5Cfrac%7B1%7D%7B2%7D(v_%7Bi+1%7D%20-%20v_i)%20(f(v_%7Bi+1%7D)%20+%20f(v_i))%20-%20%5Cint_%7Bv_i%7D%5E%7Bv_%7Bi+1%7D%7D%20f(x)%20dx%7C"></p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cle%5Csum_%7Bi=0%7D%5E%7Bn%7D%5Cfrac%7BK_i%7D%7B12%7D(v_%7Bi%20+%201%7D%20-%20v_i)%5E3"></p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cle%5Cfrac%7BK%7D%7B12%7D%5Csum_%7Bi=0%7D%5E%7Bn%7D(v_%7Bi%20+%201%7D%20-%20v_i)%5E3"></p>
<p>Let <img src="https://latex.codecogs.com/png.latex?x_i%20=%20v_%7Bi+1%7D%20-%20v_i">. It’s well known that these lengths are jointly distributed like a Dirichlet <sup>3</sup>.</p>
<div class="no-row-height column-margin column-container"><div id="fn3"><p><sup>3</sup>&nbsp;See <a href="https://statisticaloddsandends.wordpress.com/2021/04/20/generating-random-draws-from-the-dir1-1-1-distribution-using-the-uniform-distribution/">here</a></p></div></div><p>This makes the <img src="https://latex.codecogs.com/png.latex?(x_0,%20...%20,%20x_%7Bn%7D)%20%5Csim%20Dirichlet(1,%201,%20....,%201)"></p>
<p>We’ll use the following properties of moments of the Dirichlet distribution <span class="citation" data-cites="lin2016">(n.d.)</span>.</p>
<div class="no-row-height column-margin column-container"><div id="ref-lin2016" class="csl-entry">
Lin, Jiayu. n.d. <span>“On the Dirichlet Distribution.”</span> <a href="https://mast.queensu.ca/~communications/Papers/msc-jiayu-lin.pdf">https://mast.queensu.ca/~communications/Papers/msc-jiayu-lin.pdf</a>.
</div></div><p><img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BE%7D%5BX_i%5Ek%5D%20=%20%5Cfrac%7B%5CGamma(n)%7D%7B%5CGamma(n%20+%20k)%7D%20%5Cfrac%7B%5CGamma(k%20+%201)%7D%7B%5CGamma(1)%7D%20=%20%5Cfrac%7B(n%20-%201)!k!%7D%7B(n%20+%20k%20-%201)!%7D%20=%20%5Cfrac%7Bk!%7D%7Bn%20(n%20+%201)%20(n%20+%202)%20...%20(n%20+%20k%20-%201)%7D"> <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BE%7D%5BX_i%5EkX_j%5Ek%5D%20=%20%5Cfrac%7B%5CGamma(n)%7D%7B%5CGamma(n%20+%202k)%7D%20%5Cfrac%7B%5CGamma(k%20+%201)%5E2%7D%7B%5CGamma(1)%7D%20=%20%5Cfrac%7B(n%20-%201)!(k!)%5E2%7D%7B(n%20+%202k%20-%201)!%7D%20=%20%5Cfrac%7Bk!%5E2%7D%7Bn%20(n%20+%201)%20(n%20+%202)%20...%20(n%20+%202k%20-%201)%7D"></p>
<p>That is the <img src="https://latex.codecogs.com/png.latex?k">-th marginal moment grows like <img src="https://latex.codecogs.com/png.latex?O(%5Cfrac%7B1%7D%7Bn%5Ek%7D)">. and that the mixed moment <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BE%7D%5BX_i%5EkX_j%5Ek%5D"> grows like <img src="https://latex.codecogs.com/png.latex?O(%5Cfrac%7B1%7D%7Bn%5E%7B2k%7D%7D)">.</p>
<p>We can look at <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BE%7D%5B(S'_n%20-%20I)%5E2%5D%20=%20%5Cmathbb%7BE%7D%5B(%5Cfrac%7BK%7D%7B12%7D)%5E2%20(%5Csum_%7Bi=0%7D%5E%7Bn%20+%201%7D(x_i)%5E3)%5E2%5D"> = <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7BK%5E2%7D%7B144%7D%5Csum_%7Bi,%20j%7D%20%5Cmathbb%7BE%7D%5Bx_i%5E3x_j%5E3%5D"></p>
<p>As the sum over the <img src="https://latex.codecogs.com/png.latex?(n%20+%202)%5E2"> terms is over moments which are all <img src="https://latex.codecogs.com/png.latex?O(%5Cfrac%7B1%7D%7Bn%5E6%7D)">, this results in <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BE%7D%5B(S'_n%20-%20I)%5E2)%5D%20=%20O(%5Cfrac%7B1%7D%7Bn%5E4%7D)"> (with an <img src="https://latex.codecogs.com/png.latex?O(%5Cfrac%7B1%7D%7Bn%5E2%7D)"> bound on the bias) <sup>4</sup>. A precise bound can be derived by carrying through the constants from the Trapezoid Rule and the Dirichlet moments.</p>
<div class="no-row-height column-margin column-container"><div id="fn4"><p><sup>4</sup>&nbsp;One can easily get an error bound on the bias <img src="https://latex.codecogs.com/png.latex?%7C%5Cmathbb%7BE%7D%5BS'_n%20-%20I%5D%7C"> without squaring the sum. Mainly looking at <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BE%7D%5B(S'_n%20-%20I)%5E2%5D"> gives us a stronger form of convergence, and one can still recover a bound on the bias.</p></div></div></section>
<section id="examples" class="level2">
<h2 class="anchored" data-anchor-id="examples">Examples</h2>
<p>Here’s some example on a few different functions on <img src="https://latex.codecogs.com/png.latex?%5B0,%201%5D"></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?f%20=%20%5Cfrac%7B1%7D%7B1%20+%20x%5E2%7D"></li>
<li><img src="https://latex.codecogs.com/png.latex?g%20=%20e%5Ex%5Csin(%5Cfrac%7Bx%7D%7B2%7D)"></li>
<li><img src="https://latex.codecogs.com/png.latex?h%20=%20x%5E3%20-%20x%20+%20x%5E2">.</li>
</ul>
<div class="cell" data-message="false" data-results="asis" data-tbl-format="none" data-layout-nrow="3" data-execution_count="2">
<div id="tbl-error" class="quarto-layout-panel anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-error-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;1: Absolute Error in estimating the integral of <img src="https://latex.codecogs.com/png.latex?f%20=%20%5Cfrac%7B1%7D%7B1%20+%20x%5E2%7D">, <img src="https://latex.codecogs.com/png.latex?g%20=%20e%5Ex%20%5Csin(%5Cfrac%7Bx%7D%7B2%7D)">, <img src="https://latex.codecogs.com/png.latex?h%20=%20x%5E3%20-%20x%20+%20x%5E2">.
</figcaption>
<div aria-describedby="tbl-error-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="quarto-layout-row">
<style type="text/css">
</style>

<table id="T_80831" class="do-not-create-environment cell caption-top table table-sm table-striped small">
<thead>
<tr class="header">
<th id="T_80831_level0_col0" class="col_heading level0 col0" style="text-align: left;" data-quarto-table-cell-role="th">Integral</th>
<th id="T_80831_level0_col1" class="col_heading level0 col1" style="text-align: left;" data-quarto-table-cell-role="th">Method</th>
<th id="T_80831_level0_col2" class="col_heading level0 col2" style="text-align: left;" data-quarto-table-cell-role="th">N=10</th>
<th id="T_80831_level0_col3" class="col_heading level0 col3" style="text-align: left;" data-quarto-table-cell-role="th">N=50</th>
<th id="T_80831_level0_col4" class="col_heading level0 col4" style="text-align: left;" data-quarto-table-cell-role="th">N=100</th>
<th id="T_80831_level0_col5" class="col_heading level0 col5" style="text-align: left;" data-quarto-table-cell-role="th">N=200</th>
<th id="T_80831_level0_col6" class="col_heading level0 col6" style="text-align: left;" data-quarto-table-cell-role="th">N=1000</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td id="T_80831_row0_col0" class="data row0 col0" style="text-align: left;">0.785398</td>
<td id="T_80831_row0_col1" class="data row0 col1" style="text-align: left;">Monte Carlo</td>
<td id="T_80831_row0_col2" class="data row0 col2" style="text-align: left;">0.026491</td>
<td id="T_80831_row0_col3" class="data row0 col3" style="text-align: left;">0.019358</td>
<td id="T_80831_row0_col4" class="data row0 col4" style="text-align: left;">0.008144</td>
<td id="T_80831_row0_col5" class="data row0 col5" style="text-align: left;">0.002608</td>
<td id="T_80831_row0_col6" class="data row0 col6" style="text-align: left;">0.001540</td>
</tr>
<tr class="even">
<td id="T_80831_row1_col0" class="data row1 col0" style="text-align: left;">0.785398</td>
<td id="T_80831_row1_col1" class="data row1 col1" style="text-align: left;">Trapezoid Rule</td>
<td id="T_80831_row1_col2" class="data row1 col2" style="text-align: left;">0.000393</td>
<td id="T_80831_row1_col3" class="data row1 col3" style="text-align: left;">0.000010</td>
<td id="T_80831_row1_col4" class="data row1 col4" style="text-align: left;">0.000038</td>
<td id="T_80831_row1_col5" class="data row1 col5" style="text-align: left;">0.000009</td>
<td id="T_80831_row1_col6" class="data row1 col6" style="text-align: left;">0.000000</td>
</tr>
<tr class="odd">
<td id="T_80831_row2_col0" class="data row2 col0" style="text-align: left;">0.785398</td>
<td id="T_80831_row2_col1" class="data row2 col1" style="text-align: left;">Simpson's 1/3 Rule</td>
<td id="T_80831_row2_col2" class="data row2 col2" style="text-align: left;">0.000002</td>
<td id="T_80831_row2_col3" class="data row2 col3" style="text-align: left;">0.000010</td>
<td id="T_80831_row2_col4" class="data row2 col4" style="text-align: left;">0.000001</td>
<td id="T_80831_row2_col5" class="data row2 col5" style="text-align: left;">0.000000</td>
<td id="T_80831_row2_col6" class="data row2 col6" style="text-align: left;">0.000000</td>
</tr>
</tbody>
</table>
</div>
<div class="quarto-layout-row">
<style type="text/css">
</style>

<table id="T_06620" class="do-not-create-environment cell caption-top table table-sm table-striped small">
<thead>
<tr class="header">
<th id="T_06620_level0_col0" class="col_heading level0 col0" style="text-align: left;" data-quarto-table-cell-role="th">Integral</th>
<th id="T_06620_level0_col1" class="col_heading level0 col1" style="text-align: left;" data-quarto-table-cell-role="th">Method</th>
<th id="T_06620_level0_col2" class="col_heading level0 col2" style="text-align: left;" data-quarto-table-cell-role="th">N=10</th>
<th id="T_06620_level0_col3" class="col_heading level0 col3" style="text-align: left;" data-quarto-table-cell-role="th">N=50</th>
<th id="T_06620_level0_col4" class="col_heading level0 col4" style="text-align: left;" data-quarto-table-cell-role="th">N=100</th>
<th id="T_06620_level0_col5" class="col_heading level0 col5" style="text-align: left;" data-quarto-table-cell-role="th">N=200</th>
<th id="T_06620_level0_col6" class="col_heading level0 col6" style="text-align: left;" data-quarto-table-cell-role="th">N=1000</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td id="T_06620_row0_col0" class="data row0 col0" style="text-align: left;">0.488364</td>
<td id="T_06620_row0_col1" class="data row0 col1" style="text-align: left;">Monte Carlo</td>
<td id="T_06620_row0_col2" class="data row0 col2" style="text-align: left;">0.146778</td>
<td id="T_06620_row0_col3" class="data row0 col3" style="text-align: left;">0.003383</td>
<td id="T_06620_row0_col4" class="data row0 col4" style="text-align: left;">0.026795</td>
<td id="T_06620_row0_col5" class="data row0 col5" style="text-align: left;">0.034787</td>
<td id="T_06620_row0_col6" class="data row0 col6" style="text-align: left;">0.009164</td>
</tr>
<tr class="even">
<td id="T_06620_row1_col0" class="data row1 col0" style="text-align: left;">0.488364</td>
<td id="T_06620_row1_col1" class="data row1 col1" style="text-align: left;">Trapezoid Rule</td>
<td id="T_06620_row1_col2" class="data row1 col2" style="text-align: left;">0.005188</td>
<td id="T_06620_row1_col3" class="data row1 col3" style="text-align: left;">0.000636</td>
<td id="T_06620_row1_col4" class="data row1 col4" style="text-align: left;">0.000118</td>
<td id="T_06620_row1_col5" class="data row1 col5" style="text-align: left;">0.000022</td>
<td id="T_06620_row1_col6" class="data row1 col6" style="text-align: left;">0.000001</td>
</tr>
<tr class="odd">
<td id="T_06620_row2_col0" class="data row2 col0" style="text-align: left;">0.488364</td>
<td id="T_06620_row2_col1" class="data row2 col1" style="text-align: left;">Simpson's 1/3 Rule</td>
<td id="T_06620_row2_col2" class="data row2 col2" style="text-align: left;">0.000131</td>
<td id="T_06620_row2_col3" class="data row2 col3" style="text-align: left;">0.000002</td>
<td id="T_06620_row2_col4" class="data row2 col4" style="text-align: left;">0.000000</td>
<td id="T_06620_row2_col5" class="data row2 col5" style="text-align: left;">0.000000</td>
<td id="T_06620_row2_col6" class="data row2 col6" style="text-align: left;">0.000000</td>
</tr>
</tbody>
</table>
</div>
<div class="quarto-layout-row">
<style type="text/css">
</style>

<table id="T_05917" class="do-not-create-environment cell caption-top table table-sm table-striped small">
<thead>
<tr class="header">
<th id="T_05917_level0_col0" class="col_heading level0 col0" style="text-align: left;" data-quarto-table-cell-role="th">Integral</th>
<th id="T_05917_level0_col1" class="col_heading level0 col1" style="text-align: left;" data-quarto-table-cell-role="th">Method</th>
<th id="T_05917_level0_col2" class="col_heading level0 col2" style="text-align: left;" data-quarto-table-cell-role="th">N=10</th>
<th id="T_05917_level0_col3" class="col_heading level0 col3" style="text-align: left;" data-quarto-table-cell-role="th">N=50</th>
<th id="T_05917_level0_col4" class="col_heading level0 col4" style="text-align: left;" data-quarto-table-cell-role="th">N=100</th>
<th id="T_05917_level0_col5" class="col_heading level0 col5" style="text-align: left;" data-quarto-table-cell-role="th">N=200</th>
<th id="T_05917_level0_col6" class="col_heading level0 col6" style="text-align: left;" data-quarto-table-cell-role="th">N=1000</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td id="T_05917_row0_col0" class="data row0 col0" style="text-align: left;">0.083333</td>
<td id="T_05917_row0_col1" class="data row0 col1" style="text-align: left;">Monte Carlo</td>
<td id="T_05917_row0_col2" class="data row0 col2" style="text-align: left;">0.178741</td>
<td id="T_05917_row0_col3" class="data row0 col3" style="text-align: left;">0.057350</td>
<td id="T_05917_row0_col4" class="data row0 col4" style="text-align: left;">0.007101</td>
<td id="T_05917_row0_col5" class="data row0 col5" style="text-align: left;">0.011000</td>
<td id="T_05917_row0_col6" class="data row0 col6" style="text-align: left;">0.000868</td>
</tr>
<tr class="even">
<td id="T_05917_row1_col0" class="data row1 col0" style="text-align: left;">0.083333</td>
<td id="T_05917_row1_col1" class="data row1 col1" style="text-align: left;">Trapezoid Rule</td>
<td id="T_05917_row1_col2" class="data row1 col2" style="text-align: left;">0.011265</td>
<td id="T_05917_row1_col3" class="data row1 col3" style="text-align: left;">0.001467</td>
<td id="T_05917_row1_col4" class="data row1 col4" style="text-align: left;">0.000173</td>
<td id="T_05917_row1_col5" class="data row1 col5" style="text-align: left;">0.000051</td>
<td id="T_05917_row1_col6" class="data row1 col6" style="text-align: left;">0.000002</td>
</tr>
<tr class="odd">
<td id="T_05917_row2_col0" class="data row2 col0" style="text-align: left;">0.083333</td>
<td id="T_05917_row2_col1" class="data row2 col1" style="text-align: left;">Simpson's 1/3 Rule</td>
<td id="T_05917_row2_col2" class="data row2 col2" style="text-align: left;">0.004317</td>
<td id="T_05917_row2_col3" class="data row2 col3" style="text-align: left;">0.000017</td>
<td id="T_05917_row2_col4" class="data row2 col4" style="text-align: left;">0.000001</td>
<td id="T_05917_row2_col5" class="data row2 col5" style="text-align: left;">0.000000</td>
<td id="T_05917_row2_col6" class="data row2 col6" style="text-align: left;">0.000000</td>
</tr>
</tbody>
</table>
</div>
</div>
</figure>
</div>
</div>
<p>We can see that the error of the estimates from the Trapezoid Monte Carlo estimator seem to decrease very rapidly.</p>
</section>
<section id="improving-the-estimator" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="improving-the-estimator">“Improving” the Estimator</h2>
<p>The above estimator can be extended to other Newton-Cotes-type estimators. A Newton-Cotes formula is an integration rule that estimates the integral via the integration of a polynomial interpolant on <img src="https://latex.codecogs.com/png.latex?k%20+%201"> equally spaced points.</p>
<p>For instance, the trapezoid rule is just the integral of the linear polynomial between two equally spaced points.</p>
<p>For our purposes, we can take the interpolant and use it to derive an integration rule on non-qequally spaced points.</p>
<p>A Simpson’s Rule-type estimator, for instance would be of order 2 and use the <img src="https://latex.codecogs.com/png.latex?3"> points next to each other (as seen in Figure&nbsp;2).</p>
<div id="cell-fig-simpson-margin" class="cell page-columns page-full" data-fig-height="0.001" data-fig-width="0.001" data-message="false" data-execution_count="3">

<div class="no-row-height column-margin column-container"><div class="cell-output cell-output-display">
<div id="fig-simpson-margin" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-simpson-margin-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<a href="quad_mc_files/figure-html/fig-simpson-margin-output-1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2" title="Figure&nbsp;2: Randomized Simpson Rule for \sin(2 \pi x)"><img src="https://www.shoresofinfinity.net/posts/quad_mc_files/figure-html/fig-simpson-margin-output-1.png" width="299" height="299" class="figure-img"></a>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-simpson-margin-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Randomized Simpson Rule for <img src="https://latex.codecogs.com/png.latex?%5Csin(2%20%5Cpi%20x)">
</figcaption>
</figure>
</div>
</div></div></div>
<p>The interpolating polynomial through the ordered points <img src="https://latex.codecogs.com/png.latex?a,%20b,%20c"> would be <img src="https://latex.codecogs.com/png.latex?p(x)%20=%20f(a)%5Cfrac%7B(c%20-%20x)(b%20-%20x)%7D%7B(c%20-%20a)(b%20-%20a)%7D%20+%20f(b)%5Cfrac%7B(c%20-%20x)(a%20-%20x)%7D%7B(c%20-%20b)(a%20-%20c)%7D%20+%20f(c)%5Cfrac%7B(a%20-%20x)(b%20-%20x)%7D%7B(a%20-%20c)(b%20-%20c)%7D">.</p>
<p>Then <img src="https://latex.codecogs.com/png.latex?%5Cint_a%5Ec%20p(x)%20dx%20=%20-%5Cfrac%7B(a%20-%20c)(f(b)(a%20-%20c)%5E2%20+%20f(a)(c%20-%20b)(2(b%20-%20a)%20-%20(c%20-%20b))%20+%20f(c)(b%20-%20a)(2(c%20-%20b)%20-%20(b%20-%20a)))%7D%7B6(b%20-%20a)(c%20-%20b)%7D"></p>
<p>If we call this result <img src="https://latex.codecogs.com/png.latex?g(a,%20b,%20c)">, then we can form the estimator</p>
<p><img src="https://latex.codecogs.com/png.latex?S''_n%20=%20%5Csum_%7Bi=0%7D%5E%7B%5Cfrac%7Bn%20-%201%7D%7B2%7D%7D%20g(v_%7B2i%7D,%20v_%7B2i+1%7D,%20v_%7B2i+2%7D)"></p>
<p>Error analysis for this can proceed in a similar way (though very messily), which should result in an estimator with <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BE%7D%5B(S''_n%20-%20I)%5E2%5D%20=%20O(%5Cfrac%7B1%7D%7Bn%5E8%7D)">. Similary we should have a <img src="https://latex.codecogs.com/png.latex?O(%5Cfrac%7B1%7D%7Bn%5E4%7D)"> bound on the bias.</p>
<p>In general, we can set up estimators from larger interpolating polynomials, to get asymptotically faster converging estimators <sup>5</sup><sup>6</sup>.</p>
<div class="no-row-height column-margin column-container"><div id="fn5"><p><sup>5</sup>&nbsp;Note that polynomial interpolation on equally spaced points can be very numerically unstable. These estimators defend against this by being on random points, but some care needs to be taken.</p></div><div id="fn6"><p><sup>6</sup>&nbsp;Note that while the Dirichlet moments will decay faster in <img src="https://latex.codecogs.com/png.latex?n"> for higher order interpolants, they also pick up larger constants.</p></div></div><p>As seen in Table&nbsp;1, we empirically get faster convergence with the Simpson’s-rule type estimator.</p>
</section>
<section id="extending-to-other-probability-distributions" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="extending-to-other-probability-distributions">Extending to other probability distributions</h2>
<p>Suppose now we have <img src="https://latex.codecogs.com/png.latex?%5Cint_%7B%5Ba,%20b%5D%7D%20f(x)%20p(x)%20dx">, where <img src="https://latex.codecogs.com/png.latex?p(x)"> is some probability density on some interval <img src="https://latex.codecogs.com/png.latex?%5Ba,%20b%5D"></p>
<p>The Monte Carlo estimate would be <img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bi=0%7D%5E%7Bn-1%7D%20f(x_i)">, where <img src="https://latex.codecogs.com/png.latex?x_i%20%5Csim%20p(x)">. We would like to use our trapezoid estimator here, where we now have samples from <img src="https://latex.codecogs.com/png.latex?p(x)"> rather than uniform samples.</p>
<p>We can naively apply the estimator by computing order statistics of <img src="https://latex.codecogs.com/png.latex?x_i">, called <img src="https://latex.codecogs.com/png.latex?z_i">, appending <img src="https://latex.codecogs.com/png.latex?a"> and <img src="https://latex.codecogs.com/png.latex?b"> to the ends much like before.</p>
<p>This gives the estimator <img src="https://latex.codecogs.com/png.latex?S'_n%20=%20%5Csum_%7Bi=0%7D%5En%20%5Cfrac%7B1%7D%7B2%7D(z_%7Bi+1%7D%20-%20z_i)%20(f(z_%7Bi+1%7D)p(z_%7Bi+1%7D)%20-%20f(z_i)p(z_i))"></p>
<p>Let <img src="https://latex.codecogs.com/png.latex?v_i%20=%20F(z_i)">, where <img src="https://latex.codecogs.com/png.latex?F"> is the CDF (we’ll assume this is completely differentiable). Then we have</p>
<p><img src="https://latex.codecogs.com/png.latex?S'_n%20=%20%5Csum_%7Bi=0%7D%5En%20%5Cfrac%7B1%7D%7B2%7D(z_%7Bi+1%7D%20-%20z_i)%20(f(z_%7Bi+1%7D)p(z_%7Bi+1%7D)%20-%20f(z_i)p(z_i)))"></p>
<p><img src="https://latex.codecogs.com/png.latex?=%20%5Csum_%7Bi=0%7D%5En%20%5Cfrac%7B1%7D%7B2%7D(F%5E%7B-1%7D(v_%7Bi+1%7D)-%20F%5E%7B-1%7D(v_i))%20(f(F%5E%7B-1%7D(v_%7Bi+1%7D))p(F%5E%7B-1%7D(v_%7Bi+1%7D))%20-%20f(F%5E%7B-1%7D(v_i))p(F%5E%7B-1%7D(v_%7Bi+1%7D)))"></p>
<p>Via an application of the Mean Value Theorem we have: <img src="https://latex.codecogs.com/png.latex?S'_n%20=%20%5Csum_%7Bi=0%7D%5En%20%5Cfrac%7B1%7D%7B2%7DF'%5E%7B-1%7D(s_i)%20(v_%7Bi+1%7D%20-%20v_i)(f(F%5E%7B-1%7D(v_%7Bi+1%7D))p(F%5E%7B-1%7D(v_%7Bi+1%7D))%20-%20f(F%5E%7B-1%7D(v_i))p(F%5E%7B-1%7D(v_i)))"></p>
<p>for some <img src="https://latex.codecogs.com/png.latex?s_i%20%5Cin%20%5Bv_i,%20v_%7Bi+1%7D%5D"></p>
<p>This suggests that if <img src="https://latex.codecogs.com/png.latex?%5Csup_%7B%5B0,%201%5D%7D%20%7CF'%5E%7B-1%7D(u)%7C%20%20=%20%5Csup_%7B%5Ba,%20b%5D%7D%20%5Cfrac%7B1%7D%7Bp(x)%7D%20%3C%20%5Cinfty">, then we can pick up another constant and proceed with our error analysis as before, and thus get a <img src="https://latex.codecogs.com/png.latex?O(%5Cfrac%7B1%7D%7Bn%5E4%7D)"> bound on <img src="https://latex.codecogs.com/png.latex?%5Cmathbb%7BE%7D%5B(I%20-%20S'_n)%5E2%5D">. More careful treatment in something like <span class="citation" data-cites="phillipe1997">Phillipe (1997)</span> can loosen this restriction.</p>
<div class="no-row-height column-margin column-container"></div><p>We can apply this rule to a Beta density <img src="https://latex.codecogs.com/png.latex?p(x)"> of a <img src="https://latex.codecogs.com/png.latex?Beta(2,%203)"> random variable, with our functions from Table&nbsp;1 to estimate <img src="https://latex.codecogs.com/png.latex?%5Cint_0%5E1%20f(x)p(x)%20dx">.</p>
<div class="cell" data-message="false" data-results="asis" data-tbl-format="none" data-layout-nrow="3" data-execution_count="4">
<div id="tbl-error-beta" class="quarto-layout-panel anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-error-beta-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;2: Absolute Error in estimating the integral of <img src="https://latex.codecogs.com/png.latex?f%20=%20%5Cfrac%7B1%7D%7B1%20+%20x%5E2%7D">, <img src="https://latex.codecogs.com/png.latex?g%20=%20e%5Ex%20%5Csin(%5Cfrac%7Bx%7D%7B2%7D)">, <img src="https://latex.codecogs.com/png.latex?h%20=%20x%5E3%20-%20x%20+%20x%5E2"> with respect to the Beta distribution.
</figcaption>
<div aria-describedby="tbl-error-beta-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="quarto-layout-row">
<style type="text/css">
</style>

<table id="T_05a87" class="do-not-create-environment cell caption-top table table-sm table-striped small">
<thead>
<tr class="header">
<th id="T_05a87_level0_col0" class="col_heading level0 col0" style="text-align: left;" data-quarto-table-cell-role="th">Integral</th>
<th id="T_05a87_level0_col1" class="col_heading level0 col1" style="text-align: left;" data-quarto-table-cell-role="th">Method</th>
<th id="T_05a87_level0_col2" class="col_heading level0 col2" style="text-align: left;" data-quarto-table-cell-role="th">N=10</th>
<th id="T_05a87_level0_col3" class="col_heading level0 col3" style="text-align: left;" data-quarto-table-cell-role="th">N=50</th>
<th id="T_05a87_level0_col4" class="col_heading level0 col4" style="text-align: left;" data-quarto-table-cell-role="th">N=100</th>
<th id="T_05a87_level0_col5" class="col_heading level0 col5" style="text-align: left;" data-quarto-table-cell-role="th">N=200</th>
<th id="T_05a87_level0_col6" class="col_heading level0 col6" style="text-align: left;" data-quarto-table-cell-role="th">N=1000</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td id="T_05a87_row0_col0" class="data row0 col0" style="text-align: left;">0.849556</td>
<td id="T_05a87_row0_col1" class="data row0 col1" style="text-align: left;">Monte Carlo</td>
<td id="T_05a87_row0_col2" class="data row0 col2" style="text-align: left;">0.022431</td>
<td id="T_05a87_row0_col3" class="data row0 col3" style="text-align: left;">0.015612</td>
<td id="T_05a87_row0_col4" class="data row0 col4" style="text-align: left;">0.006972</td>
<td id="T_05a87_row0_col5" class="data row0 col5" style="text-align: left;">0.006267</td>
<td id="T_05a87_row0_col6" class="data row0 col6" style="text-align: left;">0.003704</td>
</tr>
<tr class="even">
<td id="T_05a87_row1_col0" class="data row1 col0" style="text-align: left;">0.849556</td>
<td id="T_05a87_row1_col1" class="data row1 col1" style="text-align: left;">Trapezoid Rule</td>
<td id="T_05a87_row1_col2" class="data row1 col2" style="text-align: left;">0.071244</td>
<td id="T_05a87_row1_col3" class="data row1 col3" style="text-align: left;">0.004386</td>
<td id="T_05a87_row1_col4" class="data row1 col4" style="text-align: left;">0.001175</td>
<td id="T_05a87_row1_col5" class="data row1 col5" style="text-align: left;">0.003429</td>
<td id="T_05a87_row1_col6" class="data row1 col6" style="text-align: left;">0.000172</td>
</tr>
<tr class="odd">
<td id="T_05a87_row2_col0" class="data row2 col0" style="text-align: left;">0.849556</td>
<td id="T_05a87_row2_col1" class="data row2 col1" style="text-align: left;">Simpson's 1/3 Rule</td>
<td id="T_05a87_row2_col2" class="data row2 col2" style="text-align: left;">0.021684</td>
<td id="T_05a87_row2_col3" class="data row2 col3" style="text-align: left;">0.000002</td>
<td id="T_05a87_row2_col4" class="data row2 col4" style="text-align: left;">0.000070</td>
<td id="T_05a87_row2_col5" class="data row2 col5" style="text-align: left;">0.000004</td>
<td id="T_05a87_row2_col6" class="data row2 col6" style="text-align: left;">0.000000</td>
</tr>
</tbody>
</table>
</div>
<div class="quarto-layout-row">
<style type="text/css">
</style>

<table id="T_2afd5" class="do-not-create-environment cell caption-top table table-sm table-striped small">
<thead>
<tr class="header">
<th id="T_2afd5_level0_col0" class="col_heading level0 col0" style="text-align: left;" data-quarto-table-cell-role="th">Integral</th>
<th id="T_2afd5_level0_col1" class="col_heading level0 col1" style="text-align: left;" data-quarto-table-cell-role="th">Method</th>
<th id="T_2afd5_level0_col2" class="col_heading level0 col2" style="text-align: left;" data-quarto-table-cell-role="th">N=10</th>
<th id="T_2afd5_level0_col3" class="col_heading level0 col3" style="text-align: left;" data-quarto-table-cell-role="th">N=50</th>
<th id="T_2afd5_level0_col4" class="col_heading level0 col4" style="text-align: left;" data-quarto-table-cell-role="th">N=100</th>
<th id="T_2afd5_level0_col5" class="col_heading level0 col5" style="text-align: left;" data-quarto-table-cell-role="th">N=200</th>
<th id="T_2afd5_level0_col6" class="col_heading level0 col6" style="text-align: left;" data-quarto-table-cell-role="th">N=1000</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td id="T_2afd5_row0_col0" class="data row0 col0" style="text-align: left;">0.331193</td>
<td id="T_2afd5_row0_col1" class="data row0 col1" style="text-align: left;">Monte Carlo</td>
<td id="T_2afd5_row0_col2" class="data row0 col2" style="text-align: left;">0.047922</td>
<td id="T_2afd5_row0_col3" class="data row0 col3" style="text-align: left;">0.032177</td>
<td id="T_2afd5_row0_col4" class="data row0 col4" style="text-align: left;">0.012697</td>
<td id="T_2afd5_row0_col5" class="data row0 col5" style="text-align: left;">0.005025</td>
<td id="T_2afd5_row0_col6" class="data row0 col6" style="text-align: left;">0.003999</td>
</tr>
<tr class="even">
<td id="T_2afd5_row1_col0" class="data row1 col0" style="text-align: left;">0.331193</td>
<td id="T_2afd5_row1_col1" class="data row1 col1" style="text-align: left;">Trapezoid Rule</td>
<td id="T_2afd5_row1_col2" class="data row1 col2" style="text-align: left;">0.000814</td>
<td id="T_2afd5_row1_col3" class="data row1 col3" style="text-align: left;">0.001131</td>
<td id="T_2afd5_row1_col4" class="data row1 col4" style="text-align: left;">0.005256</td>
<td id="T_2afd5_row1_col5" class="data row1 col5" style="text-align: left;">0.001520</td>
<td id="T_2afd5_row1_col6" class="data row1 col6" style="text-align: left;">0.000146</td>
</tr>
<tr class="odd">
<td id="T_2afd5_row2_col0" class="data row2 col0" style="text-align: left;">0.331193</td>
<td id="T_2afd5_row2_col1" class="data row2 col1" style="text-align: left;">Simpson's 1/3 Rule</td>
<td id="T_2afd5_row2_col2" class="data row2 col2" style="text-align: left;">0.011204</td>
<td id="T_2afd5_row2_col3" class="data row2 col3" style="text-align: left;">0.000972</td>
<td id="T_2afd5_row2_col4" class="data row2 col4" style="text-align: left;">0.001880</td>
<td id="T_2afd5_row2_col5" class="data row2 col5" style="text-align: left;">0.001769</td>
<td id="T_2afd5_row2_col6" class="data row2 col6" style="text-align: left;">0.000013</td>
</tr>
</tbody>
</table>
</div>
<div class="quarto-layout-row">
<style type="text/css">
</style>

<table id="T_28c34" class="do-not-create-environment cell caption-top table table-sm table-striped small">
<thead>
<tr class="header">
<th id="T_28c34_level0_col0" class="col_heading level0 col0" style="text-align: left;" data-quarto-table-cell-role="th">Integral</th>
<th id="T_28c34_level0_col1" class="col_heading level0 col1" style="text-align: left;" data-quarto-table-cell-role="th">Method</th>
<th id="T_28c34_level0_col2" class="col_heading level0 col2" style="text-align: left;" data-quarto-table-cell-role="th">N=10</th>
<th id="T_28c34_level0_col3" class="col_heading level0 col3" style="text-align: left;" data-quarto-table-cell-role="th">N=50</th>
<th id="T_28c34_level0_col4" class="col_heading level0 col4" style="text-align: left;" data-quarto-table-cell-role="th">N=100</th>
<th id="T_28c34_level0_col5" class="col_heading level0 col5" style="text-align: left;" data-quarto-table-cell-role="th">N=200</th>
<th id="T_28c34_level0_col6" class="col_heading level0 col6" style="text-align: left;" data-quarto-table-cell-role="th">N=1000</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td id="T_28c34_row0_col0" class="data row0 col0" style="text-align: left;">-0.085714</td>
<td id="T_28c34_row0_col1" class="data row0 col1" style="text-align: left;">Monte Carlo</td>
<td id="T_28c34_row0_col2" class="data row0 col2" style="text-align: left;">0.061996</td>
<td id="T_28c34_row0_col3" class="data row0 col3" style="text-align: left;">0.014922</td>
<td id="T_28c34_row0_col4" class="data row0 col4" style="text-align: left;">0.000664</td>
<td id="T_28c34_row0_col5" class="data row0 col5" style="text-align: left;">0.006580</td>
<td id="T_28c34_row0_col6" class="data row0 col6" style="text-align: left;">0.001264</td>
</tr>
<tr class="even">
<td id="T_28c34_row1_col0" class="data row1 col0" style="text-align: left;">-0.085714</td>
<td id="T_28c34_row1_col1" class="data row1 col1" style="text-align: left;">Trapezoid Rule</td>
<td id="T_28c34_row1_col2" class="data row1 col2" style="text-align: left;">0.009933</td>
<td id="T_28c34_row1_col3" class="data row1 col3" style="text-align: left;">0.001845</td>
<td id="T_28c34_row1_col4" class="data row1 col4" style="text-align: left;">0.000278</td>
<td id="T_28c34_row1_col5" class="data row1 col5" style="text-align: left;">0.000761</td>
<td id="T_28c34_row1_col6" class="data row1 col6" style="text-align: left;">0.000123</td>
</tr>
<tr class="odd">
<td id="T_28c34_row2_col0" class="data row2 col0" style="text-align: left;">-0.085714</td>
<td id="T_28c34_row2_col1" class="data row2 col1" style="text-align: left;">Simpson's 1/3 Rule</td>
<td id="T_28c34_row2_col2" class="data row2 col2" style="text-align: left;">0.015353</td>
<td id="T_28c34_row2_col3" class="data row2 col3" style="text-align: left;">0.000206</td>
<td id="T_28c34_row2_col4" class="data row2 col4" style="text-align: left;">0.001751</td>
<td id="T_28c34_row2_col5" class="data row2 col5" style="text-align: left;">0.001618</td>
<td id="T_28c34_row2_col6" class="data row2 col6" style="text-align: left;">0.000059</td>
</tr>
</tbody>
</table>
</div>
</div>
</figure>
</div>
</div>
<p>As seen in Table&nbsp;2, we can still outperform the naive Monte-Carlo estimator.</p>
<p>If we only have access to an unnormalized density <img src="https://latex.codecogs.com/png.latex?h(x)">, <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bh(x)%7D%7BZ%7D%20=%20p(x)">, an application of <a href="https://en.wikipedia.org/wiki/Slutsky%27s_theorem">Slutsky’s Theorem</a> gives us the following estimator (where we simultaneously estimate the normalizing constant <img src="https://latex.codecogs.com/png.latex?Z">):</p>
<p><img src="https://latex.codecogs.com/png.latex?S'_n%20=%20%5Cfrac%7B%5Csum_%7Bi=0%7D%5En%20%5Cfrac%7B1%7D%7B2%7D(z_%7Bi+1%7D%20-%20z_i)%20(f(z_%7Bi+1%7D)h(z_%7Bi+1%7D)%20-%20f(z_i)h(z_i))%7D%7B%5Csum_%7Bi=0%7D%5En%20%5Cfrac%7B1%7D%7B2%7D(z_%7Bi+1%7D%20-%20z_i)%20(h(z_%7Bi+1%7D)%20-%20h(z_i))%7D"></p>
<p>Thus, given a non-zero unnormalized density on <img src="https://latex.codecogs.com/png.latex?%5Ba,%20b%5D"> and access to a sampler, we can estimate an expectation to any smooth function with this estimator <sup>7</sup>.</p>
<div class="no-row-height column-margin column-container"><div id="fn7"><p><sup>7</sup>&nbsp;In general we can mix and match estimators for the normalizing constant in the denominator. These estimators will be consistent, but in general will not be unbiased.</p></div></div></section>
<section id="other" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="other">Other</h2>
<p>This type of estimator seems to have been originally derived from <span class="citation" data-cites="yakowitz1978">Yakowitz and Szidarovszky (1978)</span> for the unit interval. <span class="citation" data-cites="phillipe1997">Phillipe (1997)</span> and related works extend the Riemann sum estimator to other distributions.</p>


<div class="no-row-height column-margin column-container"><div id="ref-yakowitz1978" class="csl-entry">
Yakowitz, Krimmel, S., and F. Szidarovszky. 1978. <span>“Weighted Monte Carlo Integration.”</span> <em>SIAM Journal on Numerical Analysis</em> 15 (6): 1289–1300.
</div><div id="ref-phillipe1997" class="csl-entry">
Phillipe, Anne. 1997. <span>“Importance Sampling and Riemann Sums.”</span> <em>Publications IRMA Université de Lille</em> 43 (IV).
</div></div>
</section>


 ]]></description>
  <category>monte-carlo</category>
  <category>quadrature</category>
  <guid>https://www.shoresofinfinity.net/posts/quad_mc.html</guid>
  <pubDate>Fri, 19 Sep 2025 07:00:00 GMT</pubDate>
</item>
</channel>
</rss>
